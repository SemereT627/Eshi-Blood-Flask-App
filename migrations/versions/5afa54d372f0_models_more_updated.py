"""models more updated

Revision ID: 5afa54d372f0
Revises: 25460ca5b2be
Create Date: 2021-05-28 01:32:52.840387

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '5afa54d372f0'
down_revision = '25460ca5b2be'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('DonationHistory',
    sa.Column('DonationCenterId', sa.Integer(), nullable=False),
    sa.Column('CreatedAt', sa.DateTime(), nullable=True),
    sa.Column('IsDeleted', sa.Integer(), nullable=True),
    sa.Column('AppointmentId', sa.Integer(), nullable=True),
    sa.Column('UserId', sa.Integer(), nullable=True),
    sa.Column('NurseId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['AppointmentId'], ['Appointment.AppointmentId'], ),
    sa.ForeignKeyConstraint(['NurseId'], ['User.UserId'], ),
    sa.ForeignKeyConstraint(['UserId'], ['User.UserId'], ),
    sa.PrimaryKeyConstraint('DonationCenterId')
    )
    op.add_column('Appointment', sa.Column('Discriminator', sa.String(), nullable=True))
    op.add_column('Appointment', sa.Column('DiscriminatorId', sa.Integer(), nullable=True))
    op.add_column('Appointment', sa.Column('DonorId', sa.Integer(), nullable=True))
    op.add_column('Appointment', sa.Column('CreatedAt', sa.DateTime(), nullable=True))
    op.add_column('Appointment', sa.Column('UpdatedAt', sa.DateTime(), nullable=True))
    op.add_column('Appointment', sa.Column('IsDeleted', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'Appointment', 'User', ['DonorId'], ['UserId'])
    op.add_column('DonationCenter', sa.Column('CreatedAt', sa.DateTime(), nullable=True))
    op.add_column('DonationCenter', sa.Column('UpdatedAt', sa.DateTime(), nullable=True))
    op.add_column('DonationCenter', sa.Column('IsDeleted', sa.Integer(), nullable=True))
    op.add_column('Event', sa.Column('TotalDonations', sa.Integer(), nullable=True))
    op.add_column('Event', sa.Column('Status', sa.Enum('Active', 'Pending', 'Closed', name='status'), nullable=True))
    op.add_column('Event', sa.Column('CreatedAt', sa.DateTime(), nullable=True))
    op.add_column('Event', sa.Column('UpdatedAt', sa.DateTime(), nullable=True))
    op.add_column('Event', sa.Column('IsDeleted', sa.Integer(), nullable=True))
    op.add_column('Event', sa.Column('CreatedBy', sa.Integer(), nullable=True))
    op.add_column('Event', sa.Column('UpdatedBy', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'Event', 'User', ['CreatedBy'], ['UserId'])
    op.create_foreign_key(None, 'Event', 'User', ['UpdatedBy'], ['UserId'])
    op.add_column('Request', sa.Column('TotalDonation', sa.Integer(), nullable=True))
    op.add_column('Request', sa.Column('Status', sa.Enum('Active', 'Pending', 'Closed', name='status'), nullable=True))
    op.add_column('Request', sa.Column('CreatedAt', sa.DateTime(), nullable=True))
    op.add_column('Request', sa.Column('UpdatedAt', sa.DateTime(), nullable=True))
    op.add_column('Request', sa.Column('IsDeleted', sa.Integer(), nullable=True))
    op.add_column('Request', sa.Column('CreatedBy', sa.Integer(), nullable=True))
    op.add_column('Request', sa.Column('UpdatedBy', sa.Integer(), nullable=True))
    op.drop_constraint('Request_Address_fkey', 'Request', type_='foreignkey')
    op.create_foreign_key(None, 'Request', 'User', ['CreatedBy'], ['UserId'])
    op.create_foreign_key(None, 'Request', 'User', ['UpdatedBy'], ['UserId'])
    op.drop_column('Request', 'Address')
    op.add_column('User', sa.Column('IsDeleted', sa.Integer(), nullable=True))
    op.drop_column('User', 'RegisteredAt')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('User', sa.Column('RegisteredAt', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.drop_column('User', 'IsDeleted')
    op.add_column('Request', sa.Column('Address', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'Request', type_='foreignkey')
    op.drop_constraint(None, 'Request', type_='foreignkey')
    op.create_foreign_key('Request_Address_fkey', 'Request', 'Address', ['Address'], ['AddressId'])
    op.drop_column('Request', 'UpdatedBy')
    op.drop_column('Request', 'CreatedBy')
    op.drop_column('Request', 'IsDeleted')
    op.drop_column('Request', 'UpdatedAt')
    op.drop_column('Request', 'CreatedAt')
    op.drop_column('Request', 'Status')
    op.drop_column('Request', 'TotalDonation')
    op.drop_constraint(None, 'Event', type_='foreignkey')
    op.drop_constraint(None, 'Event', type_='foreignkey')
    op.drop_column('Event', 'UpdatedBy')
    op.drop_column('Event', 'CreatedBy')
    op.drop_column('Event', 'IsDeleted')
    op.drop_column('Event', 'UpdatedAt')
    op.drop_column('Event', 'CreatedAt')
    op.drop_column('Event', 'Status')
    op.drop_column('Event', 'TotalDonations')
    op.drop_column('DonationCenter', 'IsDeleted')
    op.drop_column('DonationCenter', 'UpdatedAt')
    op.drop_column('DonationCenter', 'CreatedAt')
    op.drop_constraint(None, 'Appointment', type_='foreignkey')
    op.drop_column('Appointment', 'IsDeleted')
    op.drop_column('Appointment', 'UpdatedAt')
    op.drop_column('Appointment', 'CreatedAt')
    op.drop_column('Appointment', 'DonorId')
    op.drop_column('Appointment', 'DiscriminatorId')
    op.drop_column('Appointment', 'Discriminator')
    op.drop_table('DonationHistory')
    # ### end Alembic commands ###
